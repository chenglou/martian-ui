{
  "compilerOptions": {
    "lib": [
      "ESNext",
      "dom",
    ],
    "target": "ESNext",
    "module": "ESNext",
    "moduleDetection": "force",
    "jsx": "react-jsx",
    "incremental": false, // this causes subtle wrong caching at module boundaries
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "verbatimModuleSyntax": true,
    "noEmit": true,

    // turned on all useful type checking options and none of the nitpicky ones. If a rule isn't here, it's deemed unnecessary
    "strict": true,
    "noUncheckedIndexedAccess": true,
    "noImplicitReturns": true,
    "noImplicitOverride": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "exactOptionalPropertyTypes": true,
    "allowUnreachableCode": true, // we allow this because our editor settings uses "source.fixAll", which fixes everything on save. But then temporarily dead code gets removed during iteration, which sucks
    // so we replace this with eslint's "no-unreachable" rule, which isn't auto-fixed
    "noFallthroughCasesInSwitch": true,
    "noPropertyAccessFromIndexSignature": true, // don't disable this. This is our life-saver
    "allowSyntheticDefaultImports": true,
    "allowJs": false,
    "forceConsistentCasingInFileNames": true,
  }
}
